{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","inputText","setInputText","objectOfLetters","setObjectOfLetters","sortBy","setSortBy","useEffect","objectLetters","letter","ordered","Object","keys","sort","a","b","localeCompare","reduce","obj","key","type","value","onChange","event","target","replace","onClick","map","values","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAwFeA,EAjFc,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,mBAAuB,IAArE,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA4BJ,mBAAiB,IAA7C,mBAAOK,EAAP,KAAeC,EAAf,KAsCA,OApCAC,qBAAU,WACR,IADc,EACRC,EAA8B,GADtB,cAGKP,GAHL,IAGd,2BAA8B,CAAC,IAAtBQ,EAAqB,QACvBD,EAAcC,GAGjBD,EAAcC,IAAW,EAFzBD,EAAcC,GAAU,GALd,8BAWd,GAAGJ,EAAQ,CACT,IAAIK,EAAUC,OAAOC,KAAKJ,GAAeK,MAAK,SAACC,EAAGC,GAChD,OAAQV,GACN,IAAK,SACH,OAAOS,EAAEE,cAAcD,GACzB,IAAK,QACH,OAAOP,EAAcM,GAAKN,EAAcO,GAC1C,QACE,OAAO,MAEVE,QACD,SAACC,EAAKC,GAGJ,OADAD,EAAIC,GAAOX,EAAcW,GAClBD,IAET,IAGF,OAAOd,EAAmBM,GAG5BN,EAAmBI,KAClB,CAACH,EAAQJ,IAGX,qCACE,uBAAOmB,KAAK,OAAOC,MAAOpB,EAAWqB,SAAU,SAAAC,GAC7CrB,EAAaqB,EAAMC,OAAOH,MAAMI,QAAQ,mCAAqB,QAE/D,kCACE,gCACE,+BACE,oBAAIC,QAAS,kBAAMpB,EAAU,WAA7B,oBACA,oBAAIoB,QAAS,kBAAMpB,EAAU,UAA7B,mBACA,wCAGJ,gCAEIK,OAAOC,KAAKT,GAAiBwB,KAAI,SAAClB,GAChC,OACE,cAAC,WAAD,UACE,+BACE,6BACGA,IAEH,6BACGN,EAAgBM,KAEnB,8BACIN,EAAgBM,GAAUE,OAAOiB,OAAOzB,GAAiBc,QAAO,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAK,KAAKc,QAAQ,SAT5FpB,eC3D9BqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bea29c12.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport './App.css';\n\ninterface LetterObject {\n  [keys : string]: number\n}\n\nexport const App: React.FC = () => {\n  const [inputText, setInputText] = useState<string>('')\n  const [objectOfLetters, setObjectOfLetters] = useState<LetterObject>({})\n  const [sortBy, setSortBy] = useState<string>('')\n\n  useEffect(() => {\n    const objectLetters: LetterObject = {}\n\n    for (let letter of inputText) {\n      if (!objectLetters[letter]) {\n        objectLetters[letter] = 1\n      } else {\n        objectLetters[letter] += 1;\n      }\n    }\n\n    if(sortBy) {\n      let ordered = Object.keys(objectLetters).sort((a, b) => {\n        switch (sortBy) {\n          case 'letter':\n            return a.localeCompare(b);\n          case 'count':\n            return objectLetters[a] - objectLetters[b]\n          default:\n            return 0;\n        }\n      }).reduce(\n        (obj, key) => {\n          // @ts-ignore\n          obj[key] = objectLetters[key];\n          return obj;\n        },\n        {}\n      );\n\n      return setObjectOfLetters(ordered)\n    }\n\n    setObjectOfLetters(objectLetters)\n  }, [sortBy, inputText])\n\n  return (\n   <>\n     <input type=\"text\" value={inputText} onChange={event => {\n       setInputText(event.target.value.replace(/[^0-9^A-zА-яё\\s]/g, ''));\n     }}/>\n     <table>\n       <thead>\n         <tr>\n           <th onClick={() => setSortBy('letter')}>Letter</th>\n           <th onClick={() => setSortBy('count')}>Count</th>\n           <th>%</th>\n         </tr>\n       </thead>\n       <tbody>\n         {\n           Object.keys(objectOfLetters).map((letter: string)=>{\n             return (\n               <Fragment key={letter}>\n                 <tr>\n                   <td>\n                     {letter}\n                   </td>\n                   <td>\n                     {objectOfLetters[letter]}\n                   </td>\n                   <td>\n                     {(objectOfLetters[letter] / Object.values(objectOfLetters).reduce((a, b) => a + b, 0) * 100).toFixed(2)}\n                   </td>\n                 </tr>\n               </Fragment>\n             )\n           })\n         }\n       </tbody>\n     </table>\n   </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}