{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","inputText","setInputText","objectOfLetters","setObjectOfLetters","sortBy","setSortBy","isReversed","changeReverse","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","useEffect","objectLetters","letter","ordered","Object","keys","sort","a","b","console","log","localeCompare","reduce","obj","key","type","value","onChange","event","target","replace","onClick","randomLetters","generateWords","className","map","values","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAkHeA,EA1Gc,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,mBAAuB,IAArE,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA4BJ,mBAAiB,SAA7C,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAoCN,oBAAkB,GAAtD,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAQ,IAAIC,aAAW,CAC3BC,sBAAuB,CACrBC,IAAK,EACLC,IAAK,GAEPC,iBAAkB,CAChBF,IAAK,GACLC,IAAK,KA2CT,OAvCAE,qBAAU,WACR,IADc,EACRC,EAA8B,GADtB,cAGKf,GAHL,IAGd,2BAA8B,CAAC,IAAtBgB,EAAqB,QACvBD,EAAcC,GAGjBD,EAAcC,IAAW,EAFzBD,EAAcC,GAAU,GALd,8BAWd,GAAGZ,EAAQ,CACT,IAAIa,EAAUC,OAAOC,KAAKJ,GAAeK,MAAK,SAACC,EAAGC,GAChD,OAAQlB,GACN,IAAK,SAEH,OADAmB,QAAQC,IAAIH,EAAGA,EAAEI,cAAcH,GAAIA,GAC3BhB,EAAae,EAAEI,cAAcH,GAAKA,EAAEG,cAAcJ,GAC5D,IAAK,QACH,OAAOf,EAAaS,EAAcO,GAAKP,EAAcM,GAAKN,EAAcM,GAAKN,EAAcO,GAC7F,QACE,OAAO,MAEVI,QACD,SAACC,EAAoBC,GACnB,MAAY,MAARA,IAGJD,EAAIC,GAAOb,EAAca,IAFhBD,IAIR,IAIL,OAFAJ,QAAQC,IAAIP,GAELd,EAAmBc,GAG5Bd,EAAmBY,KAClB,CAACX,EAAQJ,EAAWM,IAGtB,qCACE,uBAAOuB,KAAK,OAAOC,MAAO9B,EAAW+B,SAAU,SAAAC,GAC7C/B,EAAa+B,EAAMC,OAAOH,MAAMI,QAAQ,gBAAiB,QAE3D,wBAAQC,QAAS,WACf,IAAMC,EAAgB5B,EAAM6B,cAAc,IAC1CpC,EAAamC,IAFf,oBAIA,wBAAOE,UAAU,QAAjB,UACE,gCACE,qBAAIA,UAAU,aAAd,UACE,oBAAIH,QAAS,WACX9B,EAAU,UACVE,GAAeD,IACdgC,UAAU,cAHb,oBAMA,oBAAIH,QAAS,WACX9B,EAAU,SACVE,GAAeD,IACdgC,UAAU,cAHb,mBAMA,oBAAIA,UAAU,cAAd,oBAGJ,gCAEIpB,OAAOC,KAAKjB,GAAiBqC,KAAI,SAACvB,GAChC,OACE,qBAAIsB,UAAU,aAAd,UACE,oBAAIA,UAAU,cAAd,SACGtB,IAEH,oBAAIsB,UAAU,cAAd,SACGpC,EAAgBc,KAEnB,oBAAIsB,UAAU,cAAd,UACIpC,EAAgBc,GAAUE,OAAOsB,OAAOtC,GAAiBwB,QAAO,SAACL,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAK,KAAKmB,QAAQ,OARzEzB,eCzF/C0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.baeb4236.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport './App.scss';\n\ninterface LetterObject {\n  [keys : string]: number\n}\n\nexport const App: React.FC = () => {\n  const [inputText, setInputText] = useState<string>('')\n  const [objectOfLetters, setObjectOfLetters] = useState<LetterObject>({})\n  const [sortBy, setSortBy] = useState<string>('count')\n  const [isReversed, changeReverse] = useState<boolean>(true)\n\n  const lorem = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 8,\n      min: 4\n    },\n    wordsPerSentence: {\n      max: 16,\n      min: 4\n    }\n  });\n\n  useEffect(() => {\n    const objectLetters: LetterObject = {}\n\n    for (let letter of inputText) {\n      if (!objectLetters[letter]) {\n        objectLetters[letter] = 1\n      } else {\n        objectLetters[letter] += 1;\n      }\n    }\n\n    if(sortBy) {\n      let ordered = Object.keys(objectLetters).sort((a, b) => {\n        switch (sortBy) {\n          case 'letter':\n            console.log(a, a.localeCompare(b), b)\n            return  isReversed ? a.localeCompare(b) : b.localeCompare(a)\n          case 'count':\n            return isReversed ? objectLetters[b] - objectLetters[a] : objectLetters[a] - objectLetters[b]\n          default:\n            return 0;\n        }\n      }).reduce(\n        (obj: LetterObject , key) => {\n          if (key === ' ') {\n            return obj;\n          }\n          obj[key] = objectLetters[key];\n          return obj;\n        }, {});\n\n      console.log(ordered)\n\n      return setObjectOfLetters(ordered)\n    }\n\n    setObjectOfLetters(objectLetters)\n  }, [sortBy, inputText, isReversed])\n\n  return (\n   <>\n     <input type=\"text\" value={inputText} onChange={event => {\n       setInputText(event.target.value.replace(/[^0-9^A-z\\s]/g, ''));\n     }}/>\n     <button onClick={() => {\n       const randomLetters = lorem.generateWords(10);\n       setInputText(randomLetters);\n     }}>Random</button>\n     <table className=\"table\">\n       <thead>\n         <tr className=\"table__row\">\n           <th onClick={() => {\n             setSortBy('letter')\n             changeReverse(!isReversed)\n           }} className=\"table__cell\">\n             Letter\n           </th>\n           <th onClick={() => {\n             setSortBy('count')\n             changeReverse(!isReversed)\n           }} className=\"table__cell\">\n             Count\n           </th>\n           <th className=\"table__cell\">%</th>\n         </tr>\n       </thead>\n       <tbody>\n         {\n           Object.keys(objectOfLetters).map((letter: string)=>{\n             return (\n               <tr className=\"table__row\" key={letter}>\n                 <td className=\"table__cell\">\n                   {letter}\n                 </td>\n                 <td className=\"table__cell\">\n                   {objectOfLetters[letter]}\n                 </td>\n                 <td className=\"table__cell\">\n                   {(objectOfLetters[letter] / Object.values(objectOfLetters).reduce((a, b) => a + b, 0) * 100).toFixed(2)}\n                 </td>\n               </tr>\n             )})}\n       </tbody>\n     </table>\n   </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}